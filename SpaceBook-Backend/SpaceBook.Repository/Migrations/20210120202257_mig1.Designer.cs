// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpaceBook.Repository;

namespace SpaceBook.Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210120202257_mig1")]
    partial class mig1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("SpaceBook.Models.Comment", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PictureCommentedPictureID")
                        .HasColumnType("int");

                    b.Property<int?>("UserCommentedUserID")
                        .HasColumnType("int");

                    b.HasKey("CommentID");

                    b.HasIndex("PictureCommentedPictureID");

                    b.HasIndex("UserCommentedUserID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("SpaceBook.Models.Favorite", b =>
                {
                    b.Property<int>("FavoriteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("PictureID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("FavoriteID");

                    b.HasIndex("PictureID");

                    b.HasIndex("UserID");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("SpaceBook.Models.Follow", b =>
                {
                    b.Property<int>("FollowID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FollowedUserID")
                        .HasColumnType("int");

                    b.Property<int?>("FollowerUserID")
                        .HasColumnType("int");

                    b.HasKey("FollowID");

                    b.HasIndex("FollowedUserID");

                    b.HasIndex("FollowerUserID");

                    b.ToTable("Follows");
                });

            modelBuilder.Entity("SpaceBook.Models.Message", b =>
                {
                    b.Property<int>("MessageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReceiverUserID")
                        .HasColumnType("int");

                    b.Property<int?>("SenderUserID")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("MessageID");

                    b.HasIndex("ReceiverUserID");

                    b.HasIndex("SenderUserID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("SpaceBook.Models.Picture", b =>
                {
                    b.Property<int>("PictureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MediaType")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PictureID");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("SpaceBook.Models.Rating", b =>
                {
                    b.Property<int>("RatingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("RatedPicturePictureID")
                        .HasColumnType("int");

                    b.Property<int?>("UserRatingUserID")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("RatingID");

                    b.HasIndex("RatedPicturePictureID");

                    b.HasIndex("UserRatingUserID");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("SpaceBook.Models.SubComment", b =>
                {
                    b.Property<int>("SubCommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CommentID")
                        .HasColumnType("int");

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserCommentUserID")
                        .HasColumnType("int");

                    b.HasKey("SubCommentID");

                    b.HasIndex("CommentID");

                    b.HasIndex("UserCommentUserID");

                    b.ToTable("SubComments");
                });

            modelBuilder.Entity("SpaceBook.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SpaceBook.Models.UserPicture", b =>
                {
                    b.Property<int>("UserPictureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("PictureID")
                        .HasColumnType("int");

                    b.Property<int?>("UploadedByUserID")
                        .HasColumnType("int");

                    b.HasKey("UserPictureID");

                    b.HasIndex("PictureID");

                    b.HasIndex("UploadedByUserID");

                    b.ToTable("UserPictures");
                });

            modelBuilder.Entity("SpaceBook.Models.Comment", b =>
                {
                    b.HasOne("SpaceBook.Models.Picture", "PictureCommented")
                        .WithMany()
                        .HasForeignKey("PictureCommentedPictureID");

                    b.HasOne("SpaceBook.Models.User", "UserCommented")
                        .WithMany()
                        .HasForeignKey("UserCommentedUserID");

                    b.Navigation("PictureCommented");

                    b.Navigation("UserCommented");
                });

            modelBuilder.Entity("SpaceBook.Models.Favorite", b =>
                {
                    b.HasOne("SpaceBook.Models.Picture", "Picture")
                        .WithMany()
                        .HasForeignKey("PictureID");

                    b.HasOne("SpaceBook.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Picture");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SpaceBook.Models.Follow", b =>
                {
                    b.HasOne("SpaceBook.Models.User", "Followed")
                        .WithMany()
                        .HasForeignKey("FollowedUserID");

                    b.HasOne("SpaceBook.Models.User", "Follower")
                        .WithMany()
                        .HasForeignKey("FollowerUserID");

                    b.Navigation("Followed");

                    b.Navigation("Follower");
                });

            modelBuilder.Entity("SpaceBook.Models.Message", b =>
                {
                    b.HasOne("SpaceBook.Models.User", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverUserID");

                    b.HasOne("SpaceBook.Models.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderUserID");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("SpaceBook.Models.Rating", b =>
                {
                    b.HasOne("SpaceBook.Models.Picture", "RatedPicture")
                        .WithMany()
                        .HasForeignKey("RatedPicturePictureID");

                    b.HasOne("SpaceBook.Models.User", "UserRating")
                        .WithMany()
                        .HasForeignKey("UserRatingUserID");

                    b.Navigation("RatedPicture");

                    b.Navigation("UserRating");
                });

            modelBuilder.Entity("SpaceBook.Models.SubComment", b =>
                {
                    b.HasOne("SpaceBook.Models.Comment", "Comment")
                        .WithMany()
                        .HasForeignKey("CommentID");

                    b.HasOne("SpaceBook.Models.User", "UserComment")
                        .WithMany()
                        .HasForeignKey("UserCommentUserID");

                    b.Navigation("Comment");

                    b.Navigation("UserComment");
                });

            modelBuilder.Entity("SpaceBook.Models.UserPicture", b =>
                {
                    b.HasOne("SpaceBook.Models.Picture", "Picture")
                        .WithMany()
                        .HasForeignKey("PictureID");

                    b.HasOne("SpaceBook.Models.User", "UploadedBy")
                        .WithMany()
                        .HasForeignKey("UploadedByUserID");

                    b.Navigation("Picture");

                    b.Navigation("UploadedBy");
                });
#pragma warning restore 612, 618
        }
    }
}
